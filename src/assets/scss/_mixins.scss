@mixin build-helpers($prefix-property-map, $suffix-value-map) {
  @each $prefix, $property in $prefix-property-map {
    $singleProperty: length($property) == 1;
    @each $suffix, $value in $suffix-value-map {
      .#{$prefix}-#{$suffix} {
        @if $singleProperty {
          #{$property}: $value;
        } @else {
          @each $subProperty in $property {
            #{$subProperty}: $value;
          }
        }
      }
    }
  }
}

@mixin build-color-helpers($color-map) {
  @each $color, $intensities in $color-map {
    $singleIntensity: length($intensities) == 1;
    @if $singleIntensity {
      .c-#{$color} {
        color: $intensities;
      }
      .bg-#{$color} {
        background-color: $intensities;
      }
      .fill-#{$color} {
        fill: $intensities;
      }
    } @else {
      @each $intensity, $hex in $intensities {
        .c-#{$color}-#{$intensity} {
          color: $hex;
        }
        .bg-#{$color}-#{$intensity} {
          background-color: $hex;
        }
        .fill-#{$color}-#{$intensity} {
          fill: $hex;
        }
      }
    }
  }
}

@mixin desktop-width {
  @media (min-width: $desktop-width) {
    @content;
  }
}

@mixin desktop-height {
  @media (min-height: $desktop-height) {
    @content;
  }
}
